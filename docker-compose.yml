services:
  prod.zookeeper.1:
    image: confluentinc/cp-zookeeper:latest
    container_name: prod.zookeeper.1
    hostname: prod.zookeeper.1
    restart: always
    ports:
      - 12181:12181
    healthcheck:
      test: echo stat | nc localhost 12181
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 12181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: prod.zookeeper.1:12888:13888;prod.zookeeper.2:22888:23888;prod.zookeeper.3:32888:33888
    volumes: 
      - ./containers-data/prod.zookeeper.1/data:/var/lib/zookeeper/data
      - ./containers-data/prod.zookeeper.1/log:/var/lib/zookeeper/log
      - ./containers-data/prod.zookeeper.1/secrets:/etc/zookeeper/secrets

  prod.zookeeper.2:
    image: confluentinc/cp-zookeeper:latest
    container_name: prod.zookeeper.2
    hostname: prod.zookeeper.2
    restart: always
    ports:
      - 22181:22181
    healthcheck:
      test: echo stat | nc localhost 22181
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: prod.zookeeper.1:12888:13888;prod.zookeeper.2:22888:23888;prod.zookeeper.3:32888:33888
    volumes: 
      - ./containers-data/prod.zookeeper.2/data:/var/lib/zookeeper/data
      - ./containers-data/prod.zookeeper.2/log:/var/lib/zookeeper/log
      - ./containers-data/prod.zookeeper.2/secrets:/etc/zookeeper/secrets

  prod.zookeeper.3:
    image: confluentinc/cp-zookeeper:latest
    container_name: prod.zookeeper.3
    hostname: prod.zookeeper.3
    restart: always
    ports:
      - 32181:32181
    healthcheck:
      test: echo stat | nc localhost 32181
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: prod.zookeeper.1:12888:13888;prod.zookeeper.2:22888:23888;prod.zookeeper.3:32888:33888
    volumes: 
      - ./containers-data/prod.zookeeper.3/data:/var/lib/zookeeper/data
      - ./containers-data/prod.zookeeper.3/log:/var/lib/zookeeper/log
      - ./containers-data/prod.zookeeper.3/secrets:/etc/zookeeper/secrets
  
  prod.workio.1:
    image: confluentinc/cp-kafka:latest
    container_name: prod.workio.1
    hostname: prod.workio.1
    restart: always
    depends_on:
      - prod.zookeeper.1
      - prod.zookeeper.2
      - prod.zookeeper.3
    ports:
      - 19092:19092
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_ZOOKEEPER_CONNECT: prod.zookeeper.1:12181,prod.zookeeper.2:22181,prod.zookeeper.3:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://prod.workio.1:19092
    volumes:
      - ./containers-data/prod.workio.1/data:/var/lib/kafka/data
      - ./containers-data/prod.workio.1/secrets:/etc/kafka/secrets

  prod.workio.2:
    image: confluentinc/cp-kafka:latest
    container_name: prod.workio.2
    hostname: prod.workio.2
    restart: always
    depends_on:
      - prod.zookeeper.1
      - prod.zookeeper.2
      - prod.zookeeper.3
    ports:
      - 29092:29092
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_ZOOKEEPER_CONNECT: prod.zookeeper.1:12181,prod.zookeeper.2:22181,prod.zookeeper.3:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://prod.workio.2:29092
    volumes:
      - ./containers-data/prod.workio.2/data:/var/lib/kafka/data
      - ./containers-data/prod.workio.2/secrets:/etc/kafka/secrets

  prod.workio.3:
    image: confluentinc/cp-kafka:latest
    container_name: prod.workio.3
    hostname: prod.workio.3
    restart: always
    depends_on:
      - prod.zookeeper.1
      - prod.zookeeper.2
      - prod.zookeeper.3
    ports:
      - 39092:39092
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_ZOOKEEPER_CONNECT: prod.zookeeper.1:12181,prod.zookeeper.2:22181,prod.zookeeper.3:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://prod.workio.3:39092
    volumes:
      - ./containers-data/prod.workio.3/data:/var/lib/kafka/data
      - ./containers-data/prod.workio.3/secrets:/etc/kafka/secrets

  prod.workio.4:
    image: influxdb:latest
    container_name: prod.workio.4
    hostname: prod.workio.4
    restart: always
    ports:
      - 8086:8086
    env_file: .env
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_RETENTION=${INFLUXDB_INIT_RETENTION}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    volumes:
      - ./containers-data/prod.workio.4/data:/var/lib/influxdb
      - ./containers-data/prod.workio.4/conf:/etc/influxdb/influxdb.conf
      - ./containers-init/influxdb:/docker-entrypoint-initdb.d

  prod.redis:
    image: "redis:latest"
    container_name: prod.redis
    hostname: prod.redis
    restart: always
    ports:
      - 6379:6379
    env_file: .env
    environment:
      - REDIS_REPLICATION_MODE=master
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./containers-data/prod.redis/data:/var/lib/redis
      - ./containers-data/prod.redis/conf:/usr/local/etc/redis/redis.conf

  # prod.work.1 (GUI, Monitoring and Siddhi) - TBD
  # prod.work.2 (GUI, Monitoring and Siddhi) - TBD
  # prod.work.3 (GUI, Monitoring and Siddhi) - TBD

  prod.grafana:
    image: grafana/grafana:latest
    container_name: prod.grafana
    hostname: prod.grafana
    restart: always
    depends_on:
      - prod.workio.4
    links:
      - prod.workio.4
    ports:
      - 3000:3000
    env_file: .env
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./containers-data/prod.grafana/storage:/var/lib/grafana
      - ./containers-data/prod.grafana/provisioning/:/etc/grafana/provisioning
      - ./containers-init/grafana/datasources/all.yml:/etc/grafana/provisioning/datasources/all.yml
